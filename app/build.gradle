apply plugin: 'com.android.application'
apply plugin: 'findbugs'
apply plugin: 'pmd'

android {
    // See build.gradle in the root of the project
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId 'com.artemzin.androiddevelopmentculture'
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName '1.0'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }

    // Lint will fail the build if project has warnings
    lintOptions {
        warningsAsErrors true
        abortOnError true

        disable 'GoogleAppIndexingWarning' // App does not have deep linking
    }
}

dependencies {
    compile libraries.supportAppCompat
    compile libraries.supportDesign

    testCompile libraries.junit
}

task findbugs(type: FindBugs, dependsOn: assemble) {
    ignoreFailures = false // Fail early
    effort = 'max'
    reportLevel = 'low' // Report even low priority problems

    classes = files("${project.projectDir}/build/intermediates/classes")
    source = fileTree('src/main/java')
    classpath = files() // If somebody have an idea how to make this work with support libraries -> open a PR please.

    excludeFilter = file("${project.projectDir}/static_analyzers/findbugs-filter.xml")
}

task pmd(type: Pmd, dependsOn: assemble) {
    ignoreFailures = false // Fail early
    ruleSets = ['java-basic', 'java-braces', 'java-strings', 'java-design', 'java-unusedcode']

    source = fileTree('src/main/java')
}